%================================================================
%        Prey-Predator Simulation Family Member Generator
%================================================================
%
% Name of File: WaterSources.m
%
% Description: This is an auto-generated file generated by
%   PreyPredatorFamilyGenerator.exe AML compiler & composer.
%   
%   Contains algorithms to containing algorithms for water 
%   sources for the prey-predator populations simulation.
%
% Copyright:
%  This software is open source and reuseable by anyone within
%  the organization.
%================================================================
classdef WaterSources
   
    properties
        %same type of properties as food.
        w; %this is different in that this represents ALL water sources
        gr; %the growth rate of ALL water sources
        WM; %water multiplier
        drinks=[]; %array of ALL species. they all have to drink at some point
        %I should mention that the water consumed by food sources
        %(e.g. plants) is not considered here, although it could be.
        numDrinks=[]; %this could just be an array of 3s; they drink 3 times a day.
        %either way, this is the number of times the species drinks from
        %any water source.
        S; %scaling factor.
        season;
        seasonNum;
        weeks=0;
    end
    
    methods
        function water = WaterSources(initialSize, gr, WM, drinks, numDrinks, S, season)
            water.w = initialSize;
            water.gr = gr;
            water.WM = WM;
            water.drinks = drinks;
            water.numDrinks = numDrinks;
            water.S = S;
            water.season = season;
            switch season
                case char('Winter')
                    water.seasonNum=4;
                case char('Spring')
                    water.seasonNum=1;
                case char('Summer')
                    water.seasonNum=2;
                case char ('Fall')
                    water.seasonNum=3;
                otherwise
                    water.seasonNum=1;
            end
        end
        function outputw = getw()
            outputw = water.w;
        end
        function calculateUpdate(time)
            
            
            switch water.seasonNum
                case 1 %Spring doesn't affect avg growth rate much
                    seasonalgrowth = water.gr;
                case 2 %Summer causes an increase in vegetation as
                    %sunlight becomes more abundant
                    seasonalgrowth = water.gr*2;
                case 3 %Fall causes avg growth rates in certain 
                    %vegetation to go back down to avg
                    seasonalgrowth = water.gr;
                case 4 %Winter causes a decrease in deciduous
                    %vegetation, BUT an increase in underground
                    %vegetation and some above-ground vegetation
                    %(e.g. certain fruits).
                    %We are not considering underground
                    %habitats, so therefore growth rate overall
                    %goes slightly down.
                    seasonalgrowth = water.gr*0.8;
                otherwise
                    seasonalgrowth = water.gr;
            end
            w1 = seasonalgrowth*water.WM*water.w; %total affected growth rate
            w2 = 0;
            for idx=1:numel(water.drinks)
                thisSpecies = water.drinks(indx);
                w2= w2 + water.numDrinks(idx)*water.w*thisSpecies.getx()/water.S;
            end
            
            water.updatedFoods = water.w + (w1-w2)*time;
            %see SpeciesPopulations on the whole time bit.
        end
        function update()
            %call this function to update all foods AFTER all calculations
            %are made
            water.w = water.updatedFoods;
            
            water.weeks = water.weeks +1;
            weeksFromSeason = mod(water.weeks, 52);
            if (weeksFromSeason==13 || weeksFromSeason == 26 || weeksFromSeason == 39 || weeksFromSeason ==0) %season change.
                water.seasonNum = water.seasonNum + 1;
                switch water.seasonNum
                    case 1
                        water.season = char('Spring');
                    case 2
                        water.season = char('Summer');
                    case 3
                        water.season = char('Fall');
                    case 4
                        water.season = char('Winter');
                    case 5
                        water.seasonNum = 1;
                        water.season = char('Spring');
                    otherwise
                        disp('error');
                end
            end
        end
    end
    
end
%================================================================
%----------------------------------------------------------------
% 2015-11-29:
%  Auto-generated file.
%----------------------------------------------------------------
%================================================================
